name: CI Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    services:
      mysql:
        image: mysql:8.0.29
        env:
          MYSQL_ROOT_PASSWORD: tempdbpassword
          MYSQL_DATABASE: pizza
        ports:
          - '3306:3306'
        options: >-
          --health-cmd "mysqladmin ping -ptempdbpassword"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Write config file
        run: |
          echo module.exports =  {
    jwtSecret: 'peesha',
    db: {
      connection: {
        host: '127.0.0.1',
        user: 'root',
        password: 'creedtrevor12',
        database: 'pizza',
        connectTimeout: 60000,
      },
      listPerPage: 10,
    },
    factory: {
      url: 'https://pizza-factory.cs329.click',
      apiKey: '38df172424ac4fbbb60476f4ec2fa077',
    },
 };

      - name: Set version
        id: set_version
        run: |
          version=$(date +'%Y%m%d.%H%M%S')
          echo "version=$version" >> "$GITHUB_OUTPUT"
          printf '{"version": "%s" }' "$version" > src/version.json

      - name: Tests
        run: npm test

      - name: Update coverage
        run: |
          # Extract coverage percentage from JSON
          coverage=$(jq '.total.lines.pct' coverage/coverage-summary.json)
          coverage_pct=$(printf "%.0f" $coverage) # Round to nearest whole number
          
          # Determine badge color based on threshold (80% cutoff)
          color=$(echo "$coverage < 80" | bc -l | awk '{if ($1) print "red"; else print "green"}')
          
          # Generate badge using img.shields.io
          curl -o coverageBadge.svg "https://img.shields.io/badge/Coverage-${coverage_pct}%25-${color}"
          
          # Configure Git to commit the badge
          git config --local user.name "github-actions"
          git config --local user.email "github-actions@github.com"
          git add coverageBadge.svg
          git commit -m "Updated coverage badge"
          git push

